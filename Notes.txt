Entity Framework
-------------  ORM - системи  ------------
Object Relation Mapping - Відображення даних та їх зв'язків на об'єкти та їх зв'язки

"Ручний варіант"
class User {     // DTO (Data Transfer Object) або Entity - об'єкти для представлення даних
	public User(DataReader r) {
		this.Name = r.GetString("user_name");
		....
	}
}

DataReader = cmd.ExecuteReader("SELECT * FROM users WHERE id = ...")
r.Read();
User user = new User(r)

міні-ORM (Dapper)
User user = Query<User>("SELECT * FROM users WHERE id = ...")

ORM-framework
Контекст даних - об'єкт, який відображує всю БД, таблиці якої = колекції контексту
User user = dataContext.Users.Find(u => u.Id = ...)

------------- Entity Framework -----------
Набір інструментів для зведення роботи з БД до LINQ-формалізму
Центральне поняття - контекст даних
"Data First" - підхід до розробки коли спочатку створюється БД (SQL)
"Code First" - ... коли спочатку описується контекст, а з нього формується БД

Встановлення (пакети NuGet):
1. Microsoft.EntityFrameworkCore - базові інструменти, однакові для всіх БД
2. Драйвер конкретної БД. Для MS SQL Server - Microsoft.EntityFrameworkCore.SqlServer
3. Інструментарій командного рядка (Міграції) - Microsoft.EntityFrameworkCore.Tools
----
4. Робота з конфігурацією (якщо не закладено у проєкті) 
 - Microsoft.Extensions.Configuration
 - Microsoft.Extensions.Configuration.Json

Налаштування
- створюємо файл конфігурації, рекомендовано - appsettings.json
- створюємо секцію "ConnectionStrings", зазначаємо рядок підключення
   !! на момент написання рядку БД ще не існує, її створить EF відповідними командами
- у властивостях appsettings.json вибираємо копіювання до збірки
- налаштовуємо контекст даних (див DataContext.cs)

Ініціалізація
Міграції - аналог git-commit - фіксації структури БД (контексту) з можливістю відкату
до попередніх фіксацій
- запускаємо РМ-консоль (менеджера пакетів)

----------------Навігаційні властивості--------------------------
Властивості (get;set;), що є посиланнями на інші сутності або їх колекції.
Вони не відображаються на БД, а є лише у коді, проте їх заповнення бере на себе
EF.



Д.З. Закласти у свій проєкт, навігаційні властивості (прямі та інверсні)
для всіх необхідних сутностей. Реалізувати налаштування їх відношень
у контексті даних.
